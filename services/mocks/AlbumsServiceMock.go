// Code generated by MockGen. DO NOT EDIT.
// Source: services/AlbumsService.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gin "github.com/gin-gonic/gin"
	gomock "github.com/golang/mock/gomock"
)

// MockIAlbumService is a mock of IAlbumService interface.
type MockIAlbumService struct {
	ctrl     *gomock.Controller
	recorder *MockIAlbumServiceMockRecorder
}

// MockIAlbumServiceMockRecorder is the mock recorder for MockIAlbumService.
type MockIAlbumServiceMockRecorder struct {
	mock *MockIAlbumService
}

// NewMockIAlbumService creates a new mock instance.
func NewMockIAlbumService(ctrl *gomock.Controller) *MockIAlbumService {
	mock := &MockIAlbumService{ctrl: ctrl}
	mock.recorder = &MockIAlbumServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIAlbumService) EXPECT() *MockIAlbumServiceMockRecorder {
	return m.recorder
}

// DeleteAlbum mocks base method.
func (m *MockIAlbumService) DeleteAlbum(c *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "DeleteAlbum", c)
}

// DeleteAlbum indicates an expected call of DeleteAlbum.
func (mr *MockIAlbumServiceMockRecorder) DeleteAlbum(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteAlbum", reflect.TypeOf((*MockIAlbumService)(nil).DeleteAlbum), c)
}

// GetAlbumById mocks base method.
func (m *MockIAlbumService) GetAlbumById(c *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "GetAlbumById", c)
}

// GetAlbumById indicates an expected call of GetAlbumById.
func (mr *MockIAlbumServiceMockRecorder) GetAlbumById(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAlbumById", reflect.TypeOf((*MockIAlbumService)(nil).GetAlbumById), c)
}

// GetAlbums mocks base method.
func (m *MockIAlbumService) GetAlbums(c *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "GetAlbums", c)
}

// GetAlbums indicates an expected call of GetAlbums.
func (mr *MockIAlbumServiceMockRecorder) GetAlbums(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAlbums", reflect.TypeOf((*MockIAlbumService)(nil).GetAlbums), c)
}

// PostAlbums mocks base method.
func (m *MockIAlbumService) PostAlbums(c *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "PostAlbums", c)
}

// PostAlbums indicates an expected call of PostAlbums.
func (mr *MockIAlbumServiceMockRecorder) PostAlbums(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PostAlbums", reflect.TypeOf((*MockIAlbumService)(nil).PostAlbums), c)
}

// PutAlbum mocks base method.
func (m *MockIAlbumService) PutAlbum(c *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "PutAlbum", c)
}

// PutAlbum indicates an expected call of PutAlbum.
func (mr *MockIAlbumServiceMockRecorder) PutAlbum(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PutAlbum", reflect.TypeOf((*MockIAlbumService)(nil).PutAlbum), c)
}
